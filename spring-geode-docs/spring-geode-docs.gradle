import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'io.spring.convention.docs'
apply plugin: 'io.spring.convention.spring-test'

dependencies {

	compile project(':spring-geode-starter')

	testCompile "junit:junit"
	testCompile "org.assertj:assertj-core"
	testCompile "org.mockito:mockito-core"
	testCompile "org.projectlombok:lombok"
	testCompile "org.springframework:spring-test"
	testCompile "edu.umd.cs.mtc:multithreadedtc"

}

def versions = dependencyManagement.managedVersions

asciidoctor {

	def githubBaseUrl = "https://github.com/spring-projects/spring-boot-data-geode"
	def githubTag = snapshotBuild ? 'master' : project.version
	def githubUrl = "$githubBaseUrl/tree/$githubTag"

	attributes 'version' : project.version,
	    'version-snapshot': snapshotBuild,
		'version-milestone': milestoneBuild,
		'version-release': releaseBuild,
		'highlightjsdir@': "js/highlight",
		'github-url': githubUrl,
		'github-samples-url': "${githubUrl}/spring-geode-samples",
		'download-url' : "${githubBaseUrl}/archive/${githubTag}.zip",
		'docinfodir@': ".",
		'master-apache-geode-version' : "19",
		'master-pivotal-gemfire-version' : "98",
		'master-pivotal-cloudcache-version' : "1-8",
		'spring-version' : versions['org.springframework:spring-core'],
		'spring-boot-version' : "${springBootVersion}",
		'spring-boot-data-geode-version' : project.version,
		'spring-data-commons-version' : "${springDataReleaseTrainVersion}",
		'spring-data-gemfire-version' : "${springDataGemFireVersion}",
		'spring-data-geode-version' : "${springDataGeodeVersion}",
		'spring-session-data-gemfire-version' : "${springSessionDataGeodeVersion}",
		'spring-session-data-geode-version' : "${springSessionDataGeodeVersion}",
		'docs-dir' : rootProject.projectDir.path + '/spring-geode-docs',
		'docs-src-dir' : rootProject.projectDir.path + '/spring-geode-docs/src/main/java',
		'docs-resources-dir' : rootProject.projectDir.path + '/spring-geode-docs/src/main/resources',
		'examples-dir' : rootProject.projectDir.path + '/spring-geode-examples',
		'samples-dir'  : rootProject.projectDir.path + '/spring-geode-samples',
		'starter-logging-dir' : rootProject.projectDir.path + '/spring-geode-starter-logging',
	    'starter-logging-src-dir' : rootProject.projectDir.path + '/spring-geode-starter-logging/src/main/src',
	    'starter-logging-resources-dir' : rootProject.projectDir.path + '/spring-geode-starter-logging/src/main/resources'
}

javadoc {
	configure(options) {
		links = [
			"https://docs.spring.io/spring/docs/current/javadoc-api/",
			"https://docs.spring.io/spring-boot/docs/current/api/",
			"https://docs.spring.io/spring-boot-data-geode/docs/${project.version}/api/",
			"https://docs.spring.io/spring-data/commons/docs/current/api/",
			"https://docs.spring.io/spring-data/geode/docs/current/api/",
			"https://geode.apache.org/releases/latest/javadoc/",
		]
	}
}

processResources {
	eachFile { file ->
		if (!file.name.endsWith(".jks")) {
			file.filter ReplaceTokens, tokens: [
				'project-dir' : rootProject.projectDir.path,
				'project-version' : project.version,
				'docs-dir' : rootProject.projectDir.path + '/spring-geode-docs',
				'samples-dir' : rootProject.projectDir.path + '/spring-geode-samples'
			]
		}
	}
}
